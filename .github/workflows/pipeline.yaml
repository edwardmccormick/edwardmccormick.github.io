---
name: Test and Deploy Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v3
      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."

      - name: Setup Deno
        uses: denoland/setup-deno@61fe2df320078202e33d7d5ad347e7dcfa0e8f31
        with:
          deno-version: v1.x

      - name: Verify formatting
        run: deno fmt --check
      - name: Run linter

        run: deno lint

      - name: Run tests
        run: deno test -A

      - name: Find and Replace - Tokenize S3 Bucket Name
        run: find static-website-cloudformation.yaml -type f -exec sed -i ''s/#{S3_BUCKET_NAME}#/${{ secrets.S3_BUCKET_NAME }}/g'' {} \;

      - name: Find and Replace - Tokenize AWS Hosted Zone Id
        run: find static-website-cloudformation.yaml -type f -exec sed -i ''s/#{AWS_HOSTED_ZONE_ID}#/${{ secrets.AWS_HOSTED_ZONE_ID }}/g'' {} \;


      - name: Configure AWS Credentials For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{AWS_SECRET_KEY}}
          aws-region: us-east-1
          mask-aws-account-id: true

      - name: Infrastructure Management with Cloudformation
        run: aws update-stack --stack-name ${{ AWS_STACK_NAME }} --role-arn ${{ CLOUDFORMATION_ROLE }}

      - name: Upload Contents of Repository to S3 Bucket
        run: aws s3 cp ${{ vars.GITHUB_WORKSPACE }} --exclude "README.md" ".gitignore" ".idea" ".github" "tailwind.config.js" "test.html"
